{"version":3,"sources":["DieRoller/Dice.js","DieRoller/DiceRoller.js","App.js","utils/reportWebVitals.js","index.js"],"names":["Dice","className","data-roll","this","props","roll","data-side","Component","DiceRoller","rollDice","bind","adjustDice","state","rolling","rolls","numDice","min","max","Math","ceil","floor","random","die","classList","toggle","e","document","querySelectorAll","forEach","toggleClasses","setState","st","newVal","i","length","getRandomNumber","setTimeout","x","parseInt","target","value","GoLower","GoHigher","br","type","onClick","disabled","map","item","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b31920c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../Styles/dice.css'\r\n\r\nclass Dice extends Component{\r\n\r\n  render(){\r\n    return(\r\n      <ol className=\"die-list even-roll\" data-roll={this.props.roll}>\r\n        <li className=\"die-item\" data-side=\"1\">\r\n          <span className=\"dot\"></span>\r\n        </li>\r\n        <li className=\"die-item\" data-side=\"2\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n        </li>\r\n        <li className=\"die-item\" data-side=\"3\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n        </li>\r\n        <li className=\"die-item\" data-side=\"4\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n        </li>\r\n        <li className=\"die-item\" data-side=\"5\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n        </li>\r\n        <li className=\"die-item\" data-side=\"6\">\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n          <span className=\"dot\"></span>\r\n        </li>\r\n      </ol>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dice;","import React, { Component } from 'react'\r\nimport Dice from './Dice'\r\nconst maxDice = 12;\r\nclass DiceRoller extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.rollDice = this.rollDice.bind(this);\r\n    this.adjustDice =this.adjustDice.bind(this);\r\n    this.state ={rolling: false, rolls:[1,1], numDice: 2};\r\n  }\r\n\r\n  getRandomNumber(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  toggleClasses(die) {\r\n    die.classList.toggle(\"odd-roll\");\r\n    die.classList.toggle(\"even-roll\");\r\n  }\r\n\r\n  rollDice(e) {\r\n   const dice = [...document.querySelectorAll(\".die-list\")];\r\n    dice.forEach(die => {\r\n      this.toggleClasses(die);\r\n     });\r\n     this.setState(\r\n      function (st) {\r\n        let newVal = [];\r\n        for (var i=0;i<=this.state.rolls.length-1;i++){newVal[i] = this.getRandomNumber(1,6);} //default value if no changes always go to first scree\r\n        return ({rolling: true, rolls: newVal})\r\n      }\r\n    );\r\n    setTimeout(()=> this.setState({rolling:false}),1750);    \r\n    \r\n  }\r\n  adjustDice(e){\r\n    let x =  parseInt(e.target.value);\r\n    let num = this.state.numDice;\r\n    let GoLower = (x<0 && (this.state.numDice <= maxDice && this.state.numDice>1)); //determine if decrementing and can do so\r\n    let GoHigher = (x>0&& (this.state.numDice >=1 && this.state.numDice<(maxDice)));//determine if increment and can do so    \r\n    this.setState(\r\n      function (st) {\r\n        let newVal = 1;\r\n        let br =[];\r\n        if (GoHigher || GoLower){newVal = st.numDice + x} \r\n        else if (x<0 && this.state.numDice === 1){newVal =maxDice}\r\n        for (var i=0;i<=newVal-1;i++){br[i] = 1;}\r\n        return ({numDice: newVal, rolls: br})\r\n      }\r\n    );\r\n  }\r\n  \r\n\r\n  render(){\r\n    return(\r\n      <div className=\"rollDice\">\r\n        <div>\r\n          <button type=\"button\" className=\"roll-button\" onClick={this.rollDice} disabled={this.state.rolling}>\r\n            {(this.state.rolling) ? \"Rolling ..\" : \"Roll Dice\"}\r\n          </button>\r\n          <button type=\"button\" className=\"roll-button\" onClick={this.adjustDice} value={1} disabled={this.state.rolling}>More Dice</button>\r\n          <button type=\"button\" className=\"roll-button\" onClick={this.adjustDice} value={-1} disabled={this.state.rolling}>Less Dice</button>\r\n        </div>\r\n      <div className=\"dice\">\r\n        {this.state.rolls.map((item, index) => <Dice roll={item} />)}   \r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiceRoller;","import './Styles/App.css';\nimport DiceRoller from './DieRoller/DiceRoller'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <DiceRoller />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './utils/reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}