[{"C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\index.js":"1","C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\App.js":"2","C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\utils\\reportWebVitals.js":"3","C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\DieRoller\\DiceRoller.js":"4","C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\DieRoller\\Dice.js":"5","C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\index.js":"6","C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\App.js":"7","C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\utils\\reportWebVitals.js":"8","C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\DieRoller\\DiceRoller.js":"9","C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\DieRoller\\Dice.js":"10"},{"size":514,"mtime":1608185050804,"results":"11","hashOfConfig":"12"},{"size":191,"mtime":1608185135169,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608184899794,"results":"14","hashOfConfig":"12"},{"size":2547,"mtime":1608197821986,"results":"15","hashOfConfig":"12"},{"size":1501,"mtime":1608193733095,"results":"16","hashOfConfig":"12"},{"size":514,"mtime":1608185050804,"results":"17","hashOfConfig":"18"},{"size":191,"mtime":1608185135169,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608184899794,"results":"20","hashOfConfig":"18"},{"size":2547,"mtime":1608197821986,"results":"21","hashOfConfig":"18"},{"size":1501,"mtime":1608193733095,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14i8dgz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"pmuyky",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\index.js",[],"C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\App.js",[],"C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\utils\\reportWebVitals.js",[],"C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\DieRoller\\DiceRoller.js",["45"],"C:\\Users\\Cameo\\Desktop\\My learning\\diceroller\\diceroller\\src\\DieRoller\\Dice.js",[],"C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\index.js",[],["46","47"],"C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\App.js",[],"C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\utils\\reportWebVitals.js",[],"C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\DieRoller\\DiceRoller.js",["48"],"import React, { Component } from 'react'\r\nimport Dice from './Dice'\r\nconst maxDice = 12;\r\nclass DiceRoller extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.rollDice = this.rollDice.bind(this);\r\n    this.adjustDice =this.adjustDice.bind(this);\r\n    this.state ={rolling: false, rolls:[1,1], numDice: 2};\r\n  }\r\n\r\n  getRandomNumber(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  toggleClasses(die) {\r\n    die.classList.toggle(\"odd-roll\");\r\n    die.classList.toggle(\"even-roll\");\r\n  }\r\n\r\n  rollDice(e) {\r\n   const dice = [...document.querySelectorAll(\".die-list\")];\r\n    dice.forEach(die => {\r\n      this.toggleClasses(die);\r\n     });\r\n     this.setState(\r\n      function (st) {\r\n        let newVal = [];\r\n        for (var i=0;i<=this.state.rolls.length-1;i++){newVal[i] = this.getRandomNumber(1,6);} //default value if no changes always go to first scree\r\n        return ({rolling: true, rolls: newVal})\r\n      }\r\n    );\r\n    setTimeout(()=> this.setState({rolling:false}),1750);    \r\n    \r\n  }\r\n  adjustDice(e){\r\n    let x =  parseInt(e.target.value);\r\n    let num = this.state.numDice;\r\n    let GoLower = (x<0 && (this.state.numDice <= maxDice && this.state.numDice>1)); //determine if decrementing and can do so\r\n    let GoHigher = (x>0&& (this.state.numDice >=1 && this.state.numDice<(maxDice)));//determine if increment and can do so    \r\n    this.setState(\r\n      function (st) {\r\n        let newVal = 1;\r\n        let br =[];\r\n        if (GoHigher || GoLower){newVal = st.numDice + x} \r\n        else if (x<0 && this.state.numDice === 1){newVal =maxDice}\r\n        for (var i=0;i<=newVal-1;i++){br[i] = 1;}\r\n        return ({numDice: newVal, rolls: br})\r\n      }\r\n    );\r\n  }\r\n  \r\n\r\n  render(){\r\n    return(\r\n      <div className=\"rollDice\">\r\n        <div>\r\n          <button type=\"button\" className=\"roll-button\" onClick={this.rollDice} disabled={this.state.rolling}>\r\n            {(this.state.rolling) ? \"Rolling ..\" : \"Roll Dice\"}\r\n          </button>\r\n          <button type=\"button\" className=\"roll-button\" onClick={this.adjustDice} value={1} disabled={this.state.rolling}>More Dice</button>\r\n          <button type=\"button\" className=\"roll-button\" onClick={this.adjustDice} value={-1} disabled={this.state.rolling}>Less Dice</button>\r\n        </div>\r\n      <div className=\"dice\">\r\n        {this.state.rolls.map((item, index) => <Dice roll={item} />)}   \r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiceRoller;","C:\\Users\\Cameo\\desktop\\my learning\\diceroller\\diceroller\\src\\DieRoller\\Dice.js",[],{"ruleId":"49","severity":1,"message":"50","line":40,"column":9,"nodeType":"51","messageId":"52","endLine":40,"endColumn":12},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"50","line":40,"column":9,"nodeType":"51","messageId":"52","endLine":40,"endColumn":12},"no-unused-vars","'num' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]